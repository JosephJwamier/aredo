# Generated by Django 5.2.3 on 2025-09-17 19:50

import aredoapp.models
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=3, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FormKind',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Unique identifier for the form type', max_length=30, unique=True)),
                ('manager', models.CharField(help_text='Display name for the form type', max_length=100)),
                ('phone', models.TextField(blank=True, help_text='Detailed description of what this form type is for')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this form type is currently available for use')),
                ('requires_university', models.BooleanField(default=False, help_text='Whether this form type requires university selection')),
                ('requires_file_upload', models.BooleanField(default=False, help_text='Whether this form type requires file upload')),
                ('icon', models.CharField(blank=True, help_text='Icon class or name for UI display', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Form Kind',
                'verbose_name_plural': 'Form Kinds',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='News headline', max_length=255)),
                ('content', models.TextField(help_text='Main news content')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'News Article',
                'verbose_name_plural': 'News Articles',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NewsType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('color', models.CharField(default='#007bff', help_text='Hex color code for UI', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'News Type',
                'verbose_name_plural': 'News Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApplicationForm',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=255)),
                ('notes', models.CharField(max_length=500)),
                ('department', models.CharField(blank=True, max_length=255)),
                ('fees', models.CharField(blank=True, max_length=100)),
                ('degreenum', models.CharField(blank=True, max_length=20)),
                ('passport', models.CharField(blank=True, max_length=255)),
                ('degree', models.CharField(blank=True, choices=[('bachelor', 'Bachelor'), ('master', 'Master'), ('phd', 'PhD')], max_length=20)),
                ('deepdepartment', models.CharField(blank=True, max_length=100)),
                ('grad_univerBach', models.CharField(blank=True, max_length=100)),
                ('grad_univermaster', models.CharField(blank=True, max_length=100)),
                ('traker', models.CharField(blank=True, max_length=255)),
                ('pdf', models.FileField(blank=True, null=True, upload_to=aredoapp.models.ApplicationForm.upload_to)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('nearestPoint', models.CharField(blank=True, max_length=255)),
                ('govern', models.CharField(blank=True, choices=[('baghdad', 'Baghdad'), ('anbar', 'Anbar'), ('basra', 'Basra'), ('dhi_qar', 'Dhi Qar'), ('maysan', 'Maysan'), ('muthanna', 'Muthanna'), ('najaf', 'Najaf'), ('karbala', 'Karbala'), ('babil', 'Babil'), ('wasit', 'Wasit'), ('diwaniya', 'Diwaniya'), ('diyala', 'Diyala'), ('kirkuk', 'Kirkuk'), ('ninawa', 'Ninawa'), ('salah_al_din', 'Salah al-Din'), ('duhuk', 'Duhok'), ('erbil', 'Erbil'), ('sulaymaniyah', 'Sulaymaniyah'), ('halabja', 'Halabja')], max_length=20)),
                ('by', models.CharField(blank=True, choices=[('baghdad', 'Baghdad'), ('anbar', 'Anbar'), ('basra', 'Basra'), ('dhi_qar', 'Dhi Qar'), ('maysan', 'Maysan'), ('muthanna', 'Muthanna'), ('najaf', 'Najaf'), ('karbala', 'Karbala'), ('babil', 'Babil'), ('wasit', 'Wasit'), ('diwaniya', 'Diwaniya'), ('diyala', 'Diyala'), ('kirkuk', 'Kirkuk'), ('ninawa', 'Ninawa'), ('salah_al_din', 'Salah al-Din'), ('duhuk', 'Duhok'), ('erbil', 'Erbil'), ('sulaymaniyah', 'Sulaymaniyah'), ('halabja', 'Halabja')], max_length=20)),
                ('pages', models.CharField(blank=True, max_length=255)),
                ('magazine', models.CharField(blank=True, max_length=255)),
                ('mushref', models.CharField(blank=True, max_length=255)),
                ('publishResearch', models.BooleanField(default=False)),
                ('stilal', models.BooleanField(default=False)),
                ('international', models.BooleanField(default=False)),
                ('univerFees', models.CharField(blank=True, max_length=255)),
                ('kind_fees', models.CharField(blank=True, max_length=255)),
                ('touch', models.BooleanField(default=False)),
                ('submitted', models.BooleanField(default=False)),
                ('approved', models.BooleanField(default=False)),
                ('accepted', models.BooleanField(default=False)),
                ('received', models.BooleanField(default=False)),
                ('payoff', models.BooleanField(default=False)),
                ('date_applied', models.DateTimeField(auto_now_add=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forms', to=settings.AUTH_USER_MODEL)),
                ('kind', models.ForeignKey(help_text='Type of application form', on_delete=django.db.models.deletion.PROTECT, related_name='applications', to='aredoapp.formkind')),
            ],
            options={
                'verbose_name': 'Application Form',
                'verbose_name_plural': 'Application Forms',
                'ordering': ['-date_applied'],
            },
        ),
        migrations.CreateModel(
            name='ApplicationImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to=aredoapp.models.upload_to_images)),
                ('image_type', models.CharField(default='other', help_text='Type of document in the image', max_length=20)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('width', models.PositiveIntegerField(blank=True, null=True)),
                ('height', models.PositiveIntegerField(blank=True, null=True)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='aredoapp.applicationform')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='NewsImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=aredoapp.models.custom_image_upload_path)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('caption', models.TextField(blank=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='aredoapp.news')),
            ],
            options={
                'verbose_name': 'News Image',
                'verbose_name_plural': 'News Images',
                'ordering': ['order', 'uploaded_at'],
            },
        ),
        migrations.AddField(
            model_name='news',
            name='news_type',
            field=models.ForeignKey(help_text='News category', on_delete=django.db.models.deletion.CASCADE, related_name='news_articles', to='aredoapp.newstype'),
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('pdf', models.FileField(blank=True, help_text='PDF document for this university (brochure, info, etc.)', null=True, upload_to=aredoapp.models.University.university_pdf_upload_to)),
                ('university_type', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('international', 'International'), ('community', 'Community')], max_length=20)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='universities', to='aredoapp.country')),
            ],
        ),
        migrations.AddField(
            model_name='applicationform',
            name='university',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='forms', to='aredoapp.university'),
        ),
        migrations.CreateModel(
            name='FormKindField',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('field_name', models.CharField(help_text='Name of the field in ApplicationForm model', max_length=50)),
                ('is_required', models.BooleanField(default=True, help_text='Whether this field is required for this form kind')),
                ('display_name', models.CharField(blank=True, help_text='Human-readable name for the field', max_length=100)),
                ('help_text', models.CharField(blank=True, help_text='Help text to display for this field', max_length=255)),
                ('field_order', models.PositiveIntegerField(default=0, help_text='Order in which to display this field in forms')),
                ('form_kind', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='required_fields', to='aredoapp.formkind')),
            ],
            options={
                'verbose_name': 'Form Kind Field',
                'verbose_name_plural': 'Form Kind Fields',
                'ordering': ['field_order', 'field_name'],
                'unique_together': {('form_kind', 'field_name')},
            },
        ),
        migrations.AddIndex(
            model_name='applicationform',
            index=models.Index(fields=['kind', 'user'], name='aredoapp_ap_kind_id_cfba30_idx'),
        ),
        migrations.AddIndex(
            model_name='applicationform',
            index=models.Index(fields=['date_applied'], name='aredoapp_ap_date_ap_9bbf69_idx'),
        ),
        migrations.AddIndex(
            model_name='applicationform',
            index=models.Index(fields=['submitted', 'approved'], name='aredoapp_ap_submitt_f0fd46_idx'),
        ),
    ]
